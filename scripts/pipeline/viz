#!/usr/bin/env python3

"""
Generate a graph visualization of the clade junctions.

Uses the first three colums of the TSV file generated by res_to_tsv.py
to generate a graph visualization of the clade junctions.
these are:
 - Clade 1
 - Clade 2
 - MS Average

Run with
python3 visualize.py res3.tsv 
outputs res3.tsv
"""

# Load modules
import pandas as pd
import networkx as nx
from networkx.drawing.nx_agraph import graphviz_layout
import matplotlib.pyplot as plt
import sys


def viz(tsv_file):

  # Read the TSV file into a pandas DataFrame
  df = pd.read_csv(tsv_file, sep='\t')

  # Create an undirected graph
  G = nx.Graph()

  lengths = dict()

  # Add nodes and edges with weights
  for _, row in df.iterrows():
    print(row['Clade 1'], row['Clade 2'], row['MS Avg'])
    clade1 = row['Clade 1']
    clade2 = row['Clade 2']
    ms_average = row['MS Avg']

    G.add_edge(clade1, clade2)
    lengths[(clade1, clade2)] = dict(len=ms_average)

    nx.set_edge_attributes(G, lengths)

  # Plot and show
  pos = graphviz_layout(G, prog='neato')
  nx.draw_networkx(G, pos=pos)

  plt.tight_layout()
  plt.show()


def main():
    tsv_file = sys.argv[1]

    # print parsed args
    print("Generating graph visualization of clade junctions.")
    print("Parsed options:")
    print("  Input file: " + tsv_file)

    viz(tsv_file)

    
if __name__ == "__main__":
    main()
